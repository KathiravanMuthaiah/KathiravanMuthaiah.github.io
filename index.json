[{"categories":["PersonalProjects","WebDevelopment"],"content":"A step-by-step journey of creating my personal website using Hugo, LoveIt theme, GitHub Pages, and a custom subdomain.","date":"2025-07-31","objectID":"/posts/how-i-built-my-personal-website/","tags":["installation","configuration","website","Hugo","LoveIt"],"title":"How I Built My Personal Website with Hugo \u0026 LoveIt","uri":"/posts/how-i-built-my-personal-website/"},{"categories":["PersonalProjects","WebDevelopment"],"content":"Discover what the Hugo - LoveIt theme is all about and the core-concepts behind it. Building a personal website can be simple, elegant, and fully under your control using Hugo ‚Äúv0.143.1‚Äù and the LoveIt theme ‚ÄúLoveIt v0.3.0‚Äù. In this post, I share my step-by-step journey, lessons learned, and key decisions. ","date":"2025-07-31","objectID":"/posts/how-i-built-my-personal-website/:0:0","tags":["installation","configuration","website","Hugo","LoveIt"],"title":"How I Built My Personal Website with Hugo \u0026 LoveIt","uri":"/posts/how-i-built-my-personal-website/"},{"categories":["PersonalProjects","WebDevelopment"],"content":"1Ô∏è‚É£ Choosing Hugo and LoveIt I wanted: Markdown-first content Lightweight, static hosting on GitHub Pages A modern but clean design After comparing themes, I chose: Hugo Extended Binary ‚Üí No heavy dependencies LoveIt theme ‚Üí Responsive, feature-rich, and works well for blogs ","date":"2025-07-31","objectID":"/posts/how-i-built-my-personal-website/:1:0","tags":["installation","configuration","website","Hugo","LoveIt"],"title":"How I Built My Personal Website with Hugo \u0026 LoveIt","uri":"/posts/how-i-built-my-personal-website/"},{"categories":["PersonalProjects","WebDevelopment"],"content":"2Ô∏è‚É£ Local Setup Prepare Hugo Binary in /opt/software/hugo # Go to tools folder mkdir -p /opt/software/hugo cd /opt/software/hugo # Download Hugo Extended latest release (Linux 64-bit) wget https://github.com/gohugoio/hugo/releases/download/v0.143.1/hugo_extended_0.143.1_Linux-64bit.tar.gz # Extract and clean tar -xvzf hugo_extended_0.143.1_Linux-64bit.tar.gz rm hugo_extended_0.143.1_Linux-64bit.tar.gz # Verify binary ./hugo version Expected output: hugo v0.143.1-extended+linux/amd64 BuildDate=xxxx (Optional) Add Hugo to your PATH: echo 'export PATH=/opt/software/hugo:$PATH' \u003e\u003e ~/.coderc source ~/.coderc Initialize project hugo new site OwnWebsite cd OwnWebsite git init Add LoveIt theme as submodule and ensure exact version is taken git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt git add .gitmodules themes/LoveIt cd ./themes/LoveIt git fetch --all --tags git checkout v0.3.0 git pull .gitignore Setup for Submodule Edit# Ignore all other themes except LoveIt submodule themes/*/ !themes/LoveIt/ Use hugo.toml instead of old config.toml baseURL = \"https://.github.io/\" title = \"My Personal Website\" theme = [\"LoveIt\"] ","date":"2025-07-31","objectID":"/posts/how-i-built-my-personal-website/:2:0","tags":["installation","configuration","website","Hugo","LoveIt"],"title":"How I Built My Personal Website with Hugo \u0026 LoveIt","uri":"/posts/how-i-built-my-personal-website/"},{"categories":["PersonalProjects","WebDevelopment"],"content":"3Ô∏è‚É£ First Post \u0026 Images To create the first post: hugo new posts/first-post/index.md Images go inside the same folder: content/posts/first-post/ index.md SampleImage.jpg Access in Markdown: --- title: \"My First Blog Post\" subtitle: \"Learning Hugo + LoveIt\" date: 2025-07-31T10:00:00+02:00 draft: false tags: [\"hugo\", \"loveit\", \"learning\"] categories: [\"blog\"] author: \"Your Name\" summary: \"This is my first post on my personal site using Hugo LoveIt theme. Exploring markdown, code blocks, images, and shortcodes.\" --- Welcome to my **first blog post** with the [LoveIt](https://hugoloveit.com) theme! ## üìå Key Highlights 1. Markdown is **clean and fast** 2. LoveIt theme provides: - TOC support - Code highlighting - Image lightbox 3. Deployment via **GitHub Pages** is simple --- ![Legend Walks](SampleImage.jpg) ","date":"2025-07-31","objectID":"/posts/how-i-built-my-personal-website/:3:0","tags":["installation","configuration","website","Hugo","LoveIt"],"title":"How I Built My Personal Website with Hugo \u0026 LoveIt","uri":"/posts/how-i-built-my-personal-website/"},{"categories":["PersonalProjects","WebDevelopment"],"content":"4Ô∏è‚É£ GitHub Pages \u0026 Deployment Created public Pages repo: \u003cusername\u003e.github.io Linked public/ as submodule: git submodule add -b gh-pages git@github.com:/.github.io.git public Build \u0026 Deploy hugo --minify cd public git add . git commit -m \"Deploy site\" git push origin gh-pages Enable GitHub Pages ‚Üí Selected gh-pages branch ‚Üí ‚úÖ Live! ","date":"2025-07-31","objectID":"/posts/how-i-built-my-personal-website/:4:0","tags":["installation","configuration","website","Hugo","LoveIt"],"title":"How I Built My Personal Website with Hugo \u0026 LoveIt","uri":"/posts/how-i-built-my-personal-website/"},{"categories":["PersonalProjects","WebDevelopment"],"content":"5Ô∏è‚É£ Adding a Custom Subdomain I mapped OwnWebsite.example.com using DNS CNAME RECORD: CNAME ‚Üí \u003cusername\u003e.github.io Verified with: dig OwnWebsite.example.com Within 30 minutes, the custom domain with HTTPS was active. ","date":"2025-07-31","objectID":"/posts/how-i-built-my-personal-website/:5:0","tags":["installation","configuration","website","Hugo","LoveIt"],"title":"How I Built My Personal Website with Hugo \u0026 LoveIt","uri":"/posts/how-i-built-my-personal-website/"},{"categories":["PersonalProjects","WebDevelopment"],"content":"6Ô∏è‚É£ Key Lessons Learned ‚úÖ Use Hugo Extended Binary ‚Üí Clean, no OS pollution ‚úÖ Always use submodules for public/ and themes/ ‚úÖ Use Page Bundles for images ‚Üí Avoid 404 issues ‚úÖ Check Hugo theme compatibility with your Hugo version Happy Learning ","date":"2025-07-31","objectID":"/posts/how-i-built-my-personal-website/:6:0","tags":["installation","configuration","website","Hugo","LoveIt"],"title":"How I Built My Personal Website with Hugo \u0026 LoveIt","uri":"/posts/how-i-built-my-personal-website/"},{"categories":["PersonalProjects","WebDevelopment"],"content":"Enhancing Hugo with Dynamic Markdown, Mermaid, and Styled TOC After successfully building my Hugo + LoveIt personal website, I wanted to explore how to dynamically load Markdown files in the browser, instead of pre‚Äërendering everything through Hugo. This learning journey included: Rendering raw Markdown files dynamically Supporting Mermaid diagrams for flowcharts and sequences Adding MathJax for inline math expressions Styling tables and code blocks like GitHub Dynamically generating Table of Contents (TOC) for the loaded Markdown Here are my step‚Äëby‚Äëstep learnings. ","date":"2025-08-01","objectID":"/posts/enhancing_hugo_with_dynamic_markdown/:1:0","tags":["Hugo","Mermaid","website","markdown"],"title":"Enhancing Hugo with Dynamic Markdown","uri":"/posts/enhancing_hugo_with_dynamic_markdown/"},{"categories":["PersonalProjects","WebDevelopment"],"content":"1 Why Dynamic Markdown Rendering By default, Hugo expects all posts in content/ and pre‚Äërenders them into static HTML. But I wanted to: View standalone .md files (good for sharing raw notes) Avoid rewriting Markdown into Hugo shortcodes Experiment with a GitHub-like Markdown viewer in my blog For this, I used Marked.js to render Markdown at runtime. ","date":"2025-08-01","objectID":"/posts/enhancing_hugo_with_dynamic_markdown/:1:1","tags":["Hugo","Mermaid","website","markdown"],"title":"Enhancing Hugo with Dynamic Markdown","uri":"/posts/enhancing_hugo_with_dynamic_markdown/"},{"categories":["PersonalProjects","WebDevelopment"],"content":"2 Adding Dynamic Markdown Viewer Created a markdown-viewer.html layout and a markdown-viewer.js script to: Fetch Markdown file from static/files/*.md Render using Marked.js Apply syntax highlighting with Highlight.js HTML Structure: \u003cdiv id=\"markdown-container\" data-file=\"/files/sample.md\"\u003e Loading markdown... \u003c/div\u003e \u003c!-- Include scripts --\u003e \u003clink rel=\"stylesheet\" href=\"/css/github-markdown.min.css\"\u003e \u003cscript src=\"/js/marked.min.js\"\u003e\u003c/script\u003e \u003cscript src=\"/js/highlight.min.js\"\u003e\u003c/script\u003e \u003cscript src=\"/js/markdown-viewer.js\"\u003e\u003c/script\u003e ","date":"2025-08-01","objectID":"/posts/enhancing_hugo_with_dynamic_markdown/:1:2","tags":["Hugo","Mermaid","website","markdown"],"title":"Enhancing Hugo with Dynamic Markdown","uri":"/posts/enhancing_hugo_with_dynamic_markdown/"},{"categories":["PersonalProjects","WebDevelopment"],"content":"3 Table Styling and GitHub Look Markdown tables are plain by default. I added a GitHub-like table style: border-collapse: collapse; margin: 1rem 0; width: 100%; } .markdown-body th, .markdown-body td { border: 1px solid #d0d7de; padding: 6px 13px; } .markdown-body tr:nth-child(even) { background-color: #f6f8fa; } And ensured markdown-viewer.js adds .markdown-body class for styling. ","date":"2025-08-01","objectID":"/posts/enhancing_hugo_with_dynamic_markdown/:1:3","tags":["Hugo","Mermaid","website","markdown"],"title":"Enhancing Hugo with Dynamic Markdown","uri":"/posts/enhancing_hugo_with_dynamic_markdown/"},{"categories":["PersonalProjects","WebDevelopment"],"content":"4 Adding Mermaid Diagram Support LoveIt does not natively support Mermaid for dynamically loaded Markdown. Steps I followed: Added Mermaid.js to static/js/mermaid.min.js In markdown-viewer.js, converted fenced code blocks: // Convert mermaid code fences into container.querySelectorAll('pre code.language-mermaid').forEach(block =\u003e { const div = document.createElement('div'); div.classList.add('mermaid'); div.textContent = block.textContent; block.parentNode.replaceWith(div); }); if (window.mermaid) { mermaid.initialize({ startOnLoad: false }); mermaid.run({ querySelector: \".mermaid\" }); } Now my Markdown with: ```mermaid graph TD A[Start] --\u003e B[Process] --\u003e C[End] ``` ‚Ä¶renders a live Mermaid diagram in the browser. ","date":"2025-08-01","objectID":"/posts/enhancing_hugo_with_dynamic_markdown/:1:4","tags":["Hugo","Mermaid","website","markdown"],"title":"Enhancing Hugo with Dynamic Markdown","uri":"/posts/enhancing_hugo_with_dynamic_markdown/"},{"categories":["PersonalProjects","WebDevelopment"],"content":"5 MathJax for Math Expressions To support LaTeX‚Äëstyle math like: $$ 10 \\mod 7 = 3 $$ I included MathJax v3: \u003cscript\u003e window.MathJax = { tex: { inlineMath: [['$', '$'], ['\\\\(', '\\\\)']] }, svg: { fontCache: 'global' } }; \u003c/script\u003e \u003cscript src=\"/js/tex-svg.js\"\u003e\u003c/script\u003e Then triggered it in JS: if (window.MathJax) { window.MathJax.typesetPromise(); } ","date":"2025-08-01","objectID":"/posts/enhancing_hugo_with_dynamic_markdown/:1:5","tags":["Hugo","Mermaid","website","markdown"],"title":"Enhancing Hugo with Dynamic Markdown","uri":"/posts/enhancing_hugo_with_dynamic_markdown/"},{"categories":["PersonalProjects","WebDevelopment"],"content":"6 Dynamic Table of Contents (TOC) Hugo normally builds TOC at build time. Since my Markdown is dynamic, I built the TOC after rendering: Detected headings h1, h2, h3 in #markdown-container Populated the existing LoveIt \u003cnav id=\"TableOfContents\"\u003e dynamically Simplified Example: const tocNav = document.getElementById(\"TableOfContents\"); const headings = container.querySelectorAll(\"h1, h2, h3\"); if (tocNav \u0026\u0026 headings.length \u003e 0) { const ul = document.createElement(\"ul\"); headings.forEach(h =\u003e { const id = h.id || h.textContent.trim().replace(/\\s+/g, \"-\").toLowerCase(); h.id = id; const li = document.createElement(\"li\"); const a = document.createElement(\"a\"); a.textContent = h.textContent; a.href = \"#\" + id; li.appendChild(a); ul.appendChild(li); }); tocNav.innerHTML = \"\"; tocNav.appendChild(ul); } Now LoveIt‚Äôs floating TOC shows headings for dynamically loaded Markdown too. ","date":"2025-08-01","objectID":"/posts/enhancing_hugo_with_dynamic_markdown/:1:6","tags":["Hugo","Mermaid","website","markdown"],"title":"Enhancing Hugo with Dynamic Markdown","uri":"/posts/enhancing_hugo_with_dynamic_markdown/"},{"categories":["PersonalProjects","WebDevelopment"],"content":"7 I‚Äôll show step‚Äëby‚Äëstep how to Create a HTML viewer layout in Hugo Add a JavaScript file to render Markdown dynamically Support Mermaid diagrams, MathJax formulas, and GitHub‚Äëstyle tables Generate a dynamic Table of Contents (TOC) for the loaded Markdown file 7.1 Create a Hugo Layout for the Markdown Viewer Inside your Hugo project: layouts/markdown-viewer.html Example: html {{- define \"title\" }}{{ .Title }} - {{ .Site.Title }}{{ end -}} {{- define \"content\" -}} \u003c!-- Markdown Viewer Scripts --\u003e \u003c!-- MathJax v3 Configuration --\u003e \u003cscript\u003e window.MathJax = { tex: { inlineMath: [['$', '$'], ['\\\\(', '\\\\)']] }, svg: { fontCache: 'global' } }; \u003c/script\u003e \u003c!-- Load MathJax AFTER config --\u003e \u003cscript src=\"/js/tex-svg.js\"\u003e\u003c/script\u003e \u003c!-- \u003clink rel=\"stylesheet\" href=\"/css/markdown-viewer.css\"\u003e --\u003e \u003clink rel=\"stylesheet\" href=\"/css/github.min.css\"\u003e \u003clink rel=\"stylesheet\" href=\"/css/github-markdown.min.css\"\u003e \u003cscript src=\"/js/marked.min.js\"\u003e\u003c/script\u003e \u003cscript src=\"/js/highlight.min.js\"\u003e\u003c/script\u003e \u003cscript src=\"/js/markdown-viewer.js\"\u003e\u003c/script\u003e \u003cscript src=\"/js/mermaid.min.js\"\u003e\u003c/script\u003e \u003cscript\u003e mermaid.initialize({ startOnLoad: false }); \u003c/script\u003e \u003c!-- Markdown Viewer Scripts --\u003e {{- $params := .Scratch.Get \"params\" -}} {{- $toc := $params.toc -}} {{- if eq $toc true -}} {{- $toc = .Site.Params.page.toc | default dict -}} {{- else if eq $toc false -}} {{- $toc = dict \"enable\" false -}} {{- end -}} {{- /* Auto TOC */ -}} {{- if ne $toc.enable false -}} \u003cdiv class=\"toc\" id=\"toc-auto\"\u003e \u003ch2 class=\"toc-title\"\u003e{{ T \"contents\" }}\u003c/h2\u003e \u003cdiv class=\"toc-content{{ if eq $toc.auto false }} always-active{{ end }}\" id=\"toc-content-auto\"\u003e\u003c/div\u003e \u003c/div\u003e {{- end -}} \u003carticle class=\"page single\"\u003e {{- /* Title */ -}} \u003ch1 class=\"single-title animate__animated animate__flipInX\"\u003e{{ .Title | emojify }}\u003c/h1\u003e {{- /* Subtitle */ -}} {{- with $params.subtitle -}} \u003ch2 class=\"single-subtitle\"\u003e{{ . }}\u003c/h2\u003e {{- end -}} {{- /* Meta */ -}} \u003cdiv class=\"post-meta\"\u003e \u003cdiv class=\"post-meta-line\"\u003e {{- $author := $params.author | default .Site.Params.Author.name | default (T \"author\") -}} {{- $authorLink := $params.authorlink | default .Site.Params.Author.link | default .Site.Home.RelPermalink -}} \u003cspan class=\"post-author\"\u003e {{- $options := dict \"Class\" \"author\" \"Destination\" $authorLink \"Title\" \"Author\" \"Rel\" \"author\" \"Icon\" (dict \"Class\" \"fas fa-user-circle fa-fw\") \"Content\" $author -}} {{- partial \"plugin/a.html\" $options -}} \u003c/span\u003e {{- $categories := slice -}} {{- range .Params.categories -}} {{- $category := partialCached \"function/path.html\" . . | printf \"/categories/%v\" | $.Site.GetPage -}} {{- $categories = $categories | append (printf `\u003ca href=\"%v\"\u003e\u003ci class=\"far fa-folder fa-fw\" aria-hidden=\"true\"\u003e\u003c/i\u003e%v\u003c/a\u003e` $category.RelPermalink $category.Title) -}} {{- end -}} {{- with delimit $categories \"\u0026nbsp;\" -}} \u0026nbsp;\u003cspan class=\"post-category\"\u003e {{- dict \"Categories\" . | T \"includedInCategories\" | safeHTML -}} \u003c/span\u003e {{- end -}} \u003c/div\u003e \u003cdiv class=\"post-meta-line\"\u003e {{- with .Site.Params.dateformat | default \"2006-01-02\" | .PublishDate.Format -}} \u003ci class=\"far fa-calendar-alt fa-fw\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u0026nbsp;\u003ctime datetime=\"{{ . }}\"\u003e{{ . }}\u003c/time\u003e\u0026nbsp; {{- end -}} \u003ci class=\"fas fa-pencil-alt fa-fw\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u0026nbsp;{{ T \"wordCount\" .WordCount }}\u0026nbsp; \u003ci class=\"far fa-clock fa-fw\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u0026nbsp;{{ T \"readingTime\" .ReadingTime }}\u0026nbsp; {{- $comment := .Scratch.Get \"comment\" | default dict -}} {{- if $comment.enable | and $comment.valine.enable | and $comment.valine.visitor -}} \u003cspan id=\"{{ .RelPermalink }}\" class=\"leancloud_visitors\" data-flag-title=\"{{ .Title }}\"\u003e \u003ci class=\"far fa-eye fa-fw\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u0026nbsp;\u003cspan class=leancloud-visitors-count\u003e\u003c/span\u003e\u0026nbsp;{{ T \"views\" }} \u003c/span\u003e\u0026nbsp; {{- end -}} \u003c/div\u003e \u003c/div\u003e {{- /* Featured image */ -}} {{- $image := $params.featuredimage -}} {{- with .Resources.GetMatch \"featured-image\" -}} {{- $image = .RelPermalink -}} {{- end -}} {{- with $image -}} \u003cdiv class=\"featured-image\"\u003e {{- dict \"Src\" . \"Title","date":"2025-08-01","objectID":"/posts/enhancing_hugo_with_dynamic_markdown/:1:7","tags":["Hugo","Mermaid","website","markdown"],"title":"Enhancing Hugo with Dynamic Markdown","uri":"/posts/enhancing_hugo_with_dynamic_markdown/"},{"categories":["PersonalProjects","WebDevelopment"],"content":"5Ô∏è‚É£ Test in Local Hugo Server hugo server -D Open the page: http://localhost:1313/posts/markdown-demo/ You should see: Rendered Markdown Highlighted code Mermaid diagram Math formula GitHub‚Äëstyle table Floating TOC Happy Learning ","date":"2025-08-01","objectID":"/posts/enhancing_hugo_with_dynamic_markdown/:1:8","tags":["Hugo","Mermaid","website","markdown"],"title":"Enhancing Hugo with Dynamic Markdown","uri":"/posts/enhancing_hugo_with_dynamic_markdown/"},{"categories":["PersonalProjects","Mathematics"],"content":" Loading markdown... Happy Learning ","date":"2025-07-31","objectID":"/posts/mathematical_foundation_and_sss/:0:0","tags":["Algorithm","Mathematics","SSS"],"title":"Mathematical foundation and SSS","uri":"/posts/mathematical_foundation_and_sss/"},{"categories":["PersonalProjects","Mathematics"],"content":" Loading markdown... Happy Learning ","date":"2025-07-31","objectID":"/posts/polynomial_and_lagrange_interpolation/:0:0","tags":["Algorithm","Mathematics","SSS"],"title":"Polynomials and Lagranges Interpolation for SSS","uri":"/posts/polynomial_and_lagrange_interpolation/"},{"categories":null,"content":" Kathiravan Muthaiah Senior Delivery Architect | Technologist \u0026 AI Enthusiast üëã Hello! I am a technology architect and lifelong learner passionate about designing scalable, secure, and intelligent systems that blend cloud, data, and AI. I enjoy turning complex ideas into practical solutions, balancing architecture with hands-on coding and experimentation. ‚ö° Technical Curiosities Event-driven \u0026 Distributed Systems Cloud-native \u0026 Containerized Workloads Data Intelligence \u0026 AI Integration (LLM, Graph, Vector) Security, Observability \u0026 Reliable System Design I enjoy exploring how emerging technologies can simplify real-world problems. Experimenting with new programming frameworks \u0026 event pipelines Building Perceptional view to reveal insights from data Tracking some metrics \u0026 productivity patterns for self-understanding and if possible improve. üå± Beyond Work Outside of tech, I enjoy quiet explorations, reflection, and simplifying complex things I believe in learning by doing. üîó Let‚Äôs connect GitHub LinkedIn ‚úâÔ∏è kathir@mikcore.com ","date":"2025-07-31","objectID":"/about/:0:0","tags":null,"title":"About Me","uri":"/about/"}]