[{"categories":["documentation"],"content":"Discover what the Hugo - LoveIt theme is all about and the core-concepts behind it.","date":"2020-03-06","objectID":"/posts/theme-documentation-basics/","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/posts/theme-documentation-basics/"},{"categories":["documentation"],"content":"Discover what the Hugo - LoveIt theme is all about and the core-concepts behind it. ","date":"2020-03-06","objectID":"/posts/theme-documentation-basics/:0:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/posts/theme-documentation-basics/"},{"categories":["documentation"],"content":"1 Requirements Thanks to the simplicity of Hugo, Hugo is the only dependency of this theme. Just install latest edition of  Hugo for your OS (Windows, Linux, macOS). When you need to use Hugo extended edition? When you want style customization, you need to use the Hugo extended edition for correct rendering. Hugo extended edition ","date":"2020-03-06","objectID":"/posts/theme-documentation-basics/:1:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/posts/theme-documentation-basics/"},{"categories":["documentation"],"content":"2 Installation The following steps are here to help you initialize your new website. If you don’t know Hugo at all, we strongly suggest you learn more about it by following this great documentation for beginners. ","date":"2020-03-06","objectID":"/posts/theme-documentation-basics/:2:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/posts/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.1 Create Your Project Hugo provides a new command to create a new website: hugo new site my_website cd my_website ","date":"2020-03-06","objectID":"/posts/theme-documentation-basics/:2:1","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/posts/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.2 Install the Theme The LoveIt theme’s repository is: https://github.com/dillonzq/LoveIt. You can download the release  .zip file of the theme and extract it in the themes directory. Alternatively, clone this repository to the themes directory: git clone https://github.com/dillonzq/LoveIt.git themes/LoveIt Or, create an empty git repository and make this repository a submodule of your site directory: git init git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt LoveIt theme's compatibility LoveIt branch or version Supported Hugo versions master(Unstable) ≥ 0.128.0 0.3.X(Recommended) 0.128.0 - 0.143.1 0.2.X(Outdated) 0.68.0 - 0.127.0 ","date":"2020-03-06","objectID":"/posts/theme-documentation-basics/:2:2","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/posts/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.3 Basic Configuration The following is a basic configuration for the LoveIt theme: baseURL = \"http://example.org/\" # Change the default theme to be use when building the site with Hugo theme = \"LoveIt\" # website title title = \"My New Hugo Site\" # language code [\"en\", \"zh-CN\", \"fr\", \"pl\", ...] languageCode = \"en\" # language name [\"English\", \"简体中文\", \"Français\", \"Polski\", ...] languageName = \"English\" # Menu config [menu] [[menu.main]] weight = 1 identifier = \"posts\" # you can add extra information before the name (HTML format is supported), such as icons pre = \"\" # you can add extra information after the name (HTML format is supported), such as icons post = \"\" name = \"Posts\" url = \"/posts/\" # title will be shown when you hover on this menu link title = \"\" [[menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" title = \"\" [[menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" # Markup related configuration in Hugo [markup] # Syntax Highlighting (https://gohugo.io/content-management/syntax-highlighting) [markup.highlight] # false is a necessary configuration (https://github.com/dillonzq/LoveIt/issues/158) noClasses = false Note When building the website, you can set a theme by using --theme option. However, we suggest you modify the configuration file (hugo.toml) and set the theme as the default. ","date":"2020-03-06","objectID":"/posts/theme-documentation-basics/:2:3","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/posts/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.4 Create Your First Post Here is the way to create your first post: hugo new posts/first_post.md Feel free to edit the post file by adding some sample content and replacing the title value in the beginning of the file. Note By default all posts and pages are created as a draft. If you want to render these pages, remove the property draft: true from the metadata, set the property draft: false or add -D/--buildDrafts parameter to hugo command. ","date":"2020-03-06","objectID":"/posts/theme-documentation-basics/:2:4","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/posts/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.5 Launching the Website Locally Launch by using the following command: hugo serve Go to http://localhost:1313. Basic configuration preview Tip When you run hugo serve, when the contents of the files change, the page automatically refreshes with the changes. Note Since the theme use .Scratch in Hugo to implement some features, it is highly recommended that you add --disableFastRender parameter to hugo server command for the live preview of the page you are editing. hugo serve --disableFastRender ","date":"2020-03-06","objectID":"/posts/theme-documentation-basics/:2:5","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/posts/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.6 Build the Website When your site is ready to deploy, run the following command: hugo A public folder will be generated, containing all static content and assets for your website. It can now be deployed on any web server. Tip The website can be automatically published and hosted with Netlify (Read more about Automated HUGO deployments with Netlify). Alternatively, you can use AWS Amplify, Github pages, Render and more… ","date":"2020-03-06","objectID":"/posts/theme-documentation-basics/:2:6","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/posts/theme-documentation-basics/"},{"categories":["documentation"],"content":"3 Configuration ","date":"2020-03-06","objectID":"/posts/theme-documentation-basics/:3:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/posts/theme-documentation-basics/"},{"categories":["documentation"],"content":"3.1 Site Configuration In addition to Hugo global configuration and menu configuration, LoveIt lets you define the following parameters in your site configuration (here is a hugo.toml, whose values are default). Please open the code block below to view the complete sample configuration : baseURL = \"http://example.org/\" # Change the default theme to be use when building the site with Hugo theme = \"LoveIt\" # website title title = \"My New Hugo Site\" # language code [\"en\", \"zh-CN\", \"fr\", \"pl\", ...] languageCode = \"en\" # language name [\"English\", \"简体中文\", \"Français\", \"Polski\", ...] languageName = \"English\" # whether to include Chinese/Japanese/Korean hasCJKLanguage = false # copyright description used only for seo schema copyright = \"\" # whether to use robots.txt enableRobotsTXT = true # whether to use git commit log enableGitInfo = true # whether to use emoji code enableEmoji = true # ignore some build errors ignoreErrors = [\"error-remote-getjson\", \"error-missing-instagram-accesstoken\"] # Pagination config [pagination] disableAliases = false pagerSize = 10 path = \"page\" # Menu config [menu] [[menu.main]] weight = 1 identifier = \"posts\" # you can add extra information before the name (HTML format is supported), such as icons pre = \"\" # you can add extra information after the name (HTML format is supported), such as icons post = \"\" name = \"Posts\" url = \"/posts/\" # title will be shown when you hover on this menu link title = \"\" [[menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" title = \"\" [[menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" [params] # site default theme [\"auto\", \"light\", \"dark\"] defaultTheme = \"auto\" # public git repo url only then enableGitInfo is true gitRepo = \"\" # which hash function used for SRI, when empty, no SRI is used # [\"sha256\", \"sha384\", \"sha512\", \"md5\"] fingerprint = \"\" # date format dateFormat = \"2006-01-02\" # website title for Open Graph and Twitter Cards title = \"My cool site\" # website description for RSS, SEO, Open Graph and Twitter Cards description = \"Welcome to Theme-documentation-basics\" # website images for Open Graph and Twitter Cards images = [\"/logo.png\"] # Author config [params.author] name = \"xxxx\" email = \"\" link = \"\" # Header config [params.header] # desktop header mode [\"fixed\", \"normal\", \"auto\"] desktopMode = \"fixed\" # mobile header mode [\"fixed\", \"normal\", \"auto\"] mobileMode = \"auto\" # Header title config [params.header.title] # URL of the LOGO logo = \"\" # title name name = \"\" # you can add extra information before the name (HTML format is supported), such as icons pre = \"\" # you can add extra information after the name (HTML format is supported), such as icons post = \"\" # whether to use typeit animation for title name typeit = false # Footer config [params.footer] enable = true # Custom content (HTML format is supported) custom = '' # whether to show Hugo and theme info hugo = true # whether to show copyright info copyright = true # whether to show the author author = true # Site creation time since = 2019 # ICP info only in China (HTML format is supported) icp = \"\" # license info (HTML format is supported) license = 'CC BY-NC 4.0' # Section (all posts) page config [params.section] # special amount of posts in each section page paginate = 20 # date format (month and day) dateFormat = \"01-02\" # amount of RSS pages rss = 10 # List (category or tag) page config [params.list] # special amount of posts in each list page paginate = 20 # date format (month and day) dateFormat = \"01-02\" # amount of RSS pages rss = 10 # App icon config [params.app] # optional site title override for the app when added to an iOS home screen or Android launcher title = \"My cool site\" # whether to omit favicon resource links noFavicon = false # modern SVG favicon to use in place of older style .png and .ico files svgFavicon = \"\" # Android browser theme color themeColor = \"#ffffff\" # Safari mask icon col","date":"2020-03-06","objectID":"/posts/theme-documentation-basics/:3:1","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/posts/theme-documentation-basics/"},{"categories":["documentation"],"content":"3.2 Favicons, Browserconfig, Manifest It is recommended to put your own favicons: apple-touch-icon.png (180x180) favicon-32x32.png (32x32) favicon-16x16.png (16x16) mstile-150x150.png (150x150) android-chrome-192x192.png (192x192) android-chrome-512x512.png (512x512) into /static. They’re easily created via https://realfavicongenerator.net/. Customize browserconfig.xml and site.webmanifest to set theme-color and background-color. ","date":"2020-03-06","objectID":"/posts/theme-documentation-basics/:3:2","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/posts/theme-documentation-basics/"},{"categories":["documentation"],"content":"3.3 Style Customization Hugo extended version is necessary Since Hugo need to processes  SCSS to  CSS, Hugo extended version is necessary for the style customization. LoveIt theme has been built to be as configurable as possible by defining custom .scss style files. The directory including the custom .scss style files is assets/css relative to your project root directory. In assets/css/_override.scss, you can override the variables in themes/LoveIt/assets/css/_variables.scss to customize the style. Here is a example: @import url('https://fonts.googleapis.com/css?family=Fira+Mono:400,700\u0026display=swap\u0026subset=latin-ext'); $code-font-family: Fira Mono, Source Code Pro, Menlo, Consolas, Monaco, monospace; In assets/css/_custom.scss, you can add some css style code to customize the style. ","date":"2020-03-06","objectID":"/posts/theme-documentation-basics/:3:3","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/posts/theme-documentation-basics/"},{"categories":["documentation"],"content":"4 Multilingual and i18n LoveIt theme is fully compatible with Hugo multilingual mode, which provides in-browser language switching. Language Switch ","date":"2020-03-06","objectID":"/posts/theme-documentation-basics/:4:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/posts/theme-documentation-basics/"},{"categories":["documentation"],"content":"4.1 Compatibility Language Hugo Code HTML lang Attribute Theme Docs Lunr.js Support English en en Simplified Chinese zh-cn zh-CN Traditional Chinese zh-tw zh-TW French fr fr Polish pl pl Portuguese (Brazil) pt-br pt-BR Italian it it Spanish es es German de de German de de Serbian sr sr Russian ru ru Romanian ro ro Vietnamese vi vi Arabic ar ar Catalan ca ca Thai th th Telugu te te Indonesian id id Turkish tr tr Korean ko ko Hindi hi hi Dutch nl nl ","date":"2020-03-06","objectID":"/posts/theme-documentation-basics/:4:1","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/posts/theme-documentation-basics/"},{"categories":["documentation"],"content":"4.2 Basic Configuration After learning how Hugo handle multilingual websites, define your languages in your site configuration. For example with English, Chinese and French website: # determines default content language [\"en\", \"zh-cn\", \"fr\", \"pl\", ...] defaultContentLanguage = \"en\" [languages] [languages.en] weight = 1 title = \"My New Hugo Site\" languageCode = \"en\" languageName = \"English\" [[languages.en.menu.main]] weight = 1 identifier = \"posts\" pre = \"\" post = \"\" name = \"Posts\" url = \"/posts/\" title = \"\" [[languages.en.menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" title = \"\" [[languages.en.menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" [languages.zh-cn] weight = 2 title = \"我的全新 Hugo 网站\" languageCode = \"zh-CN\" languageName = \"简体中文\" hasCJKLanguage = true [[languages.zh-cn.menu.main]] weight = 1 identifier = \"posts\" pre = \"\" post = \"\" name = \"文章\" url = \"/posts/\" title = \"\" [[languages.zh-cn.menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" [[languages.zh-cn.menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" [languages.fr] weight = 3 title = \"Mon nouveau site Hugo\" languageCode = \"fr\" languageName = \"Français\" [[languages.fr.menu.main]] weight = 1 identifier = \"posts\" pre = \"\" post = \"\" name = \"Postes\" url = \"/posts/\" title = \"\" [[languages.fr.menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"Balises\" url = \"/tags/\" title = \"\" [[languages.fr.menu.main]] weight = 3 identifier = \"categories\" name = \"Catégories\" pre = \"\" post = \"\" url = \"/categories/\" title = \"\" Then, for each new page, append the language code to the file name. Single file my-page.md is split in three files: in English: my-page.en.md in Chinese: my-page.zh-cn.md in French: my-page.fr.md Note Be aware that only translated pages are displayed in menu. It’s not replaced with default language content. Tip Use Front Matter parameter to translate urls too. ","date":"2020-03-06","objectID":"/posts/theme-documentation-basics/:4:2","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/posts/theme-documentation-basics/"},{"categories":["documentation"],"content":"4.3 Overwrite Translation Strings Translations strings are used for common default values used in the theme. Translations are available in some languages, but you may use another language or want to override default values. To override these values, create a new file in your local i18n folder i18n/\u003clanguageCode\u003e.toml and inspire yourself from themes/LoveIt/i18n/en.toml. By the way, as these translations could be used by other people, please take the time to propose a translation by  making a PR to the theme! ","date":"2020-03-06","objectID":"/posts/theme-documentation-basics/:4:3","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/posts/theme-documentation-basics/"},{"categories":["documentation"],"content":"5 Search Based on Lunr.js or algolia, searching is supported in LoveIt theme. ","date":"2020-03-06","objectID":"/posts/theme-documentation-basics/:5:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/posts/theme-documentation-basics/"},{"categories":["documentation"],"content":"5.1 Output Configuration In order to generate index.json for searching, add JSON output file type to the home of the outputs part in your site configuration. [outputs] home = [\"HTML\", \"RSS\", \"JSON\"] ","date":"2020-03-06","objectID":"/posts/theme-documentation-basics/:5:1","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/posts/theme-documentation-basics/"},{"categories":["documentation"],"content":"5.2 Search Configuration Based on index.json generated by Hugo, you could activate searching. Here is the search configuration in your site configuration: [params.search] enable = true # type of search engine [\"lunr\", \"algolia\"] type = \"lunr\" # max index length of the chunked content contentLength = 4000 # placeholder of the search bar placeholder = \"\" # max number of results length maxResultLength = 10 # snippet length of the result snippetLength = 30 # HTML tag name of the highlight part in results highlightTag = \"em\" # whether to use the absolute URL based on the baseURL in search index absoluteURL = false [params.search.algolia] index = \"\" appID = \"\" searchKey = \"\" How to choose search engine? The following is a comparison of two search engines: lunr: simple, no need to synchronize index.json, no limit for contentLength, but high bandwidth and low performance (Especially for Chinese which needs a large segmentit library) algolia: high performance and low bandwidth, but need to synchronize index.json and limit for contentLength The content of the post is separated by h2 and h3 HTML tag to improve query performance and basically implement full-text search. contentLength is used to limit the max index length of the part starting with h2 and h3 HTML tag. Tips about algolia You need to upload index.json files to algolia to activate searching. You could upload the index.json files by browsers but a CLI tool may be better. The official Algolia CLI is a good choice. To be compatible with Hugo multilingual mode, you need to upload different index.json for each language to the different index of algolia, such as zh-cn/index.json or fr/index.json… ","date":"2020-03-06","objectID":"/posts/theme-documentation-basics/:5:2","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/posts/theme-documentation-basics/"},{"categories":["documentation"],"content":"Find out how to create and organize your content quickly and intuitively in LoveIt theme.","date":"2020-03-05","objectID":"/posts/theme-documentation-content/","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/posts/theme-documentation-content/"},{"categories":["documentation"],"content":"Find out how to create and organize your content quickly and intuitively in LoveIt theme. ","date":"2020-03-05","objectID":"/posts/theme-documentation-content/:0:0","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/posts/theme-documentation-content/"},{"categories":["documentation"],"content":"1 Contents Organization A few suggestions to help you get a good looking site quickly: Keep post pages in the content/posts directory, for example: content/posts/my-first-post.md Keep other pages in the content directory, for example: content/about.md Local resources organization Local Resource Reference There are three ways to reference local resources such as images and music: Using page resources in page bundles. You can reference page resources by the value for Resources.GetMatch or the filepath of the resource relative to the page directory directly. Store resources in the assets directory, which is /assets by default. The filepath of the resource to reference in the post is relative to the assets directory. Store resources in the static directory, which is /static by default. The filepath of the resource to reference in the post is relative to the static directory. The priority of references is also in the above order. There are many places in the theme where the above local resource references can be used, such as links, images, image shortcode, music shortcode and some params in the front matter. Images in page resources or assets directory processing will be supported in the future. It’s really cool! ","date":"2020-03-05","objectID":"/posts/theme-documentation-content/:1:0","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/posts/theme-documentation-content/"},{"categories":["documentation"],"content":"2 Front Matter Hugo allows you to add front matter in yaml, toml or json to your content files. Note Not all of the below front matters need to be set in each of your posts. It is necessary only if the front matters and the page part in your site configuration are inconsistent. Here is a front matter example: --- title: \"My First Post\" subtitle: \"\" date: 2020-03-04T15:58:26+08:00 lastmod: 2020-03-04T15:58:26+08:00 draft: true author: \"\" authorLink: \"\" description: \"\" license: \"\" images: [] tags: [] categories: [] featuredImage: \"\" featuredImagePreview: \"\" hiddenFromHomePage: false hiddenFromSearch: false twemoji: false lightgallery: true ruby: true fraction: true fontawesome: true linkToMarkdown: true rssFullText: false toc: enable: true auto: true code: copy: true maxShownLines: 50 math: enable: false # ... mapbox: # ... share: enable: true # ... comment: enable: true # ... library: css: # someCSS = \"some.css\" # located in \"assets/\" # Or # someCSS = \"https://cdn.example.com/some.css\" js: # someJS = \"some.js\" # located in \"assets/\" # Or # someJS = \"https://cdn.example.com/some.js\" seo: images: [] # ... --- title: the title for the content. subtitle: the subtitle for the content. date: the datetime assigned to this page, which is usually fetched from the date field in front matter, but this behaviour is configurabl in the site configuration. lastmod: the datetime at which the content was last modified. draft: if true, the content will not be rendered unless the --buildDrafts/-D flag is passed to the hugo command. author: the author for the content. authorLink: the link of the author. description: the description for the content. license: the special lisence for this content. images: page images for Open Graph and Twitter Cards. tags: the tags for the content. categories: the categories for the content. featuredImage: the featured image for the content. featuredImagePreview: the featured image for the content preview in the home page. hiddenFromHomePage: if true, the content will not be shown in the home page. hiddenFromSearch: if true, the content will not be shown in the search results. twemoji: if true, the content will enable the twemoji. lightgallery: if true, images in the content will be shown as the gallery. ruby: if true, the content will enable the ruby extended syntax. fraction: if true, the content will enable the fraction extended syntax. fontawesome: if true, the content will enable the Font Awesome extended syntax. linkToMarkdown: if true, the footer of the content will be shown the link to the orignal Markdown file. rssFullText: if true, the full text content will be shown in RSS. toc: the same as the params.page.toc part in the site configuration. code: the same as the params.page.code part in the site configuration. math: the same as the params.page.math part in the site configuration. mapbox: the same as the params.page.mapbox part in the site configuration. share: the same as the params.page.share part in the site configuration. comment: the same as the params.page.comment part in the site configuration. library: the same as the params.page.library part in the site configuration. seo: the same as the params.page.seo part in the site configuration. Tip featuredImage and featuredImagePreview support the complete usage of local resource references. If the page resource with name: featured-image or name: featured-image-preview is set in the front matter, it is not necessary to set the parameter featuredImage or featuredImagePreview: resources: - name: featured-image src: featured-image.jpg - name: featured-image-preview src: featured-image-preview.jpg ","date":"2020-03-05","objectID":"/posts/theme-documentation-content/:2:0","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/posts/theme-documentation-content/"},{"categories":["documentation"],"content":"3 Content Summaries LoveIt theme uses the summary of the content to display abstract information in the home page. Hugo can generate summaries of your content. Summary Preview ","date":"2020-03-05","objectID":"/posts/theme-documentation-content/:3:0","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/posts/theme-documentation-content/"},{"categories":["documentation"],"content":"Automatic Summary Splitting By default, Hugo automatically takes the first 70 words of your content as its summary. You may customize the summary length by setting summaryLength in the site configuration. If you are creating content in a CJKChinese/Japanese/Korean language and want to use Hugo’s automatic summary splitting, set hasCJKLanguage to true in your site configuration. ","date":"2020-03-05","objectID":"/posts/theme-documentation-content/:3:1","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/posts/theme-documentation-content/"},{"categories":["documentation"],"content":"Manual Summary Splitting Alternatively, you may add the \u003c!--more--\u003e summary divider where you want to split the article. Content that comes before the summary divider will be used as that content’s summary. Note Be careful to enter \u003c!--more--\u003e exactly; i.e., all lowercase and with no whitespace. ","date":"2020-03-05","objectID":"/posts/theme-documentation-content/:3:2","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/posts/theme-documentation-content/"},{"categories":["documentation"],"content":"Front Matter Summary You might want your summary to be something other than the text that starts the article. In this case you can provide a separate summary in the summary variable of the article front matter. ","date":"2020-03-05","objectID":"/posts/theme-documentation-content/:3:3","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/posts/theme-documentation-content/"},{"categories":["documentation"],"content":"Use Description as Summary You might want your description in the description variable of the article front matter as the summary. You may add the \u003c!--more--\u003e summary divider at the start of the article. Keep content that comes before the summary divider empty. Then LoveIt theme will use your description as the summary. ","date":"2020-03-05","objectID":"/posts/theme-documentation-content/:3:4","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/posts/theme-documentation-content/"},{"categories":["documentation"],"content":"Priority Order of Summary Selection Because there are multiple ways in which a summary can be specified it is useful to understand the order. It is as follows: If there is a \u003c!--more--\u003e summary divider present in the article but no content is before the divider, the description will be used as the summary. If there is a \u003c!--more--\u003e summary divider present in the article the text up to the divider will be provided as per the manual summary split method. If there is a summary variable in the article front matter the value of the variable will be provided as per the front matter summary method. The text at the start of the article will be provided as per the automatic summary split method. Note It is not recommended to include rich text block elements in the summary, which will cause typographic errors. Such as code blocks, pictures, tables, etc. ","date":"2020-03-05","objectID":"/posts/theme-documentation-content/:3:5","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/posts/theme-documentation-content/"},{"categories":["documentation"],"content":"4 Basic Markdown Syntax This part is shown in the basic markdown syntax page. ","date":"2020-03-05","objectID":"/posts/theme-documentation-content/:4:0","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/posts/theme-documentation-content/"},{"categories":["documentation"],"content":"5 Extended Markdown Syntax LoveIt theme has some extended syntax elements for you to write articles. ","date":"2020-03-05","objectID":"/posts/theme-documentation-content/:5:0","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/posts/theme-documentation-content/"},{"categories":["documentation"],"content":"Emoji Support This part is shown in the emoji support page. ","date":"2020-03-05","objectID":"/posts/theme-documentation-content/:5:1","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/posts/theme-documentation-content/"},{"categories":["documentation"],"content":"Mathematical Formula LoveIt theme supports mathematical formulas based on $\\KaTeX$. Set the property enable = true under [params.math] in your site configuration and the property math: true of the article front matter to enable the automatic rendering of mathematical formulas. $\\KaTeX$ automatically renders formulas based on specific delimiters. Tip Here is a list of $\\TeX$ functions supported by $\\KaTeX$. Note Since Hugo generates HTML documents according to the syntax such as _/*/\u003e\u003e when rendering Markdown documents, and some text content in the form of escape characters (such as \\(/\\)/\\[/\\]/\\\\) escape processing will be performed automatically, therefore, additional escape character expressions are required for these places to achieve automatic rendering: _ -\u003e \\_ * -\u003e \\* \u003e\u003e -\u003e \\\u003e\u003e \\( -\u003e \\\\( \\) -\u003e \\\\) \\[ -\u003e \\\\[ \\] -\u003e \\\\] \\\\ -\u003e \\\\\\\\ LoveIt theme supports raw shortcode to avoid these escape characters, which helps you write raw mathematical formula content. Example raw input: Inline Formula: {{\u003c raw \u003e}}\\(\\mathbf{E}=\\sum_{i} \\mathbf{E}_{i}=\\mathbf{E}_{1}+\\mathbf{E}_{2}+\\mathbf{E}_{3}+\\cdots\\){{\u003c /raw \u003e}} Block Formula: {{\u003c raw \u003e}} \\[ a=b+c \\\\ d+e=f \\] {{\u003c /raw \u003e}} The rendered output looks like this: Inline Formula: Block Formula: Inline Formula The default inline delimiters are: $ ... $ \\( ... \\) (escaped: \\\\( ... \\\\)) For example: $c = \\pm\\sqrt{a^2 + b^2}$ and \\\\(f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi\\\\) The rendered output looks like this: $c = \\pm\\sqrt{a^2 + b^2}$ and \\(f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi\\) Block Formula The default block delimiters are: $$ ... $$ \\[ ... \\] (escaped: \\\\[ ... \\\\]) \\begin{equation} ... \\end{equation} (unnumbered: \\begin{equation*} ... \\end{equation*}) \\begin{align} ... \\end{align} (unnumbered: \\begin{align*} ... \\end{align*}) \\begin{alignat} ... \\end{alignat} (unnumbered: \\begin{alignat*} ... \\end{alignat*}) \\begin{gather} ... \\end{gather} (unnumbered: \\begin{gather*} ... \\end{gather*}) \\begin{CD} ... \\end{CD} For example: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\\\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\] \\begin{equation*} \\rho \\frac{\\mathrm{D} \\mathbf{v}}{\\mathrm{D} t}=\\nabla \\cdot \\mathbb{P}+\\rho \\mathbf{f} \\end{equation*} \\begin{equation} \\mathbf{E}=\\sum_{i} \\mathbf{E}\\_{i}=\\mathbf{E}\\_{1}+\\mathbf{E}\\_{2}+\\mathbf{E}_{3}+\\cdots \\end{equation} \\begin{align} a\u0026=b+c \\\\\\\\ d+e\u0026=f \\end{align} \\begin{alignat}{2} 10\u0026x+\u00263\u0026y = 2 \\\\\\\\ 3\u0026x+\u002613\u0026y = 4 \\end{alignat} \\begin{gather} a=b \\\\\\\\ e=b+c \\end{gather} \\begin{CD} A @\u003ea\\\u003e\u003e B \\\\\\\\ @VbVV @AAcA \\\\\\\\ C @= D \\end{CD} The rendered output looks like this: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\] \\begin{equation*} \\rho \\frac{\\mathrm{D} \\mathbf{v}}{\\mathrm{D} t}=\\nabla \\cdot \\mathbb{P}+\\rho \\mathbf{f} \\end{equation*} \\begin{equation} \\mathbf{E}=\\sum_{i} \\mathbf{E}_{i}=\\mathbf{E}_{1}+\\mathbf{E}_{2}+\\mathbf{E}_{3}+\\cdots \\end{equation} \\begin{align} a\u0026=b+c \\\\ d+e\u0026=f \\end{align} \\begin{alignat}{2} 10\u0026x+\u00263\u0026y = 2 \\\\ 3\u0026x+\u002613\u0026y = 4 \\end{alignat} \\begin{gather} a=b \\\\ e=b+c \\end{gather} \\begin{CD} A @\u003ea\u003e\u003e B \\\\ @VbVV @AAcA \\\\ C @= D \\end{CD} Tip You can add more inline and block delimiters in your site configuration. Copy-tex Copy-tex is an extension for $\\KaTeX$. By the extension, when selecting and copying $\\KaTeX$ rendered elements, copies their $\\LaTeX$ source to the clipboard. Set the property copyTex = true under [params.math] in your site configuration to enable Copy-tex. Select and copy the formula rendered in the previous section, and you can find that the copied content is the $\\LaTeX$ source code. mhchem mhchem is an extension for $\\KaTeX$. By the extension, you can write beautiful chemical equations easily in the article. Set the property mhchem = true under [params.math] in your site configuration to enable mhchem. $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ The rendered output looks li","date":"2020-03-05","objectID":"/posts/theme-documentation-content/:5:2","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/posts/theme-documentation-content/"},{"categories":["documentation"],"content":"Ruby Annotation An extended Markdown syntax for ruby annotation is supported in LoveIt theme: [Hugo]^(An open-source static site generator) The rendered output looks like this: HugoAn open-source static site generator ","date":"2020-03-05","objectID":"/posts/theme-documentation-content/:5:3","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/posts/theme-documentation-content/"},{"categories":["documentation"],"content":"Fraction An extended Markdown syntax for fraction is supported in LoveIt theme: [Light]/[Dark] [99]/[100] The rendered output looks like this: Light/Dark 90/100 ","date":"2020-03-05","objectID":"/posts/theme-documentation-content/:5:4","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/posts/theme-documentation-content/"},{"categories":["documentation"],"content":"Font Awesome LoveIt theme uses Font Awesome as the icon library. You can easily use these icons in your articles. Get the class of icons you wanted from the Font Awesome website. Gone camping! :(fas fa-campground fa-fw): Be back soon. That is so funny! :(far fa-grin-tears): The rendered output looks like this: Gone camping!  Be back soon. That is so funny! ","date":"2020-03-05","objectID":"/posts/theme-documentation-content/:5:5","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/posts/theme-documentation-content/"},{"categories":["documentation"],"content":"Escape character In some special cases (when writing this theme documentation ), your content will conflict with basic or extended Markdown syntax, and it is inevitable. The escape character syntax can help you build the content you wanted: {?X} -\u003e X For example, two : will enable emoji syntax, which is not the behavior you want. The escape character syntax is like this: {?:}joy: The rendered output looks like this: :joy: instead of :joy: Tip This is related to an issue for Hugo, which has not been resolved. Another example is: [link{?]}(#escape-character) The rendered output looks like this: [link](#escape-character) instead of link. ","date":"2020-03-05","objectID":"/posts/theme-documentation-content/:5:6","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/posts/theme-documentation-content/"},{"categories":["documentation"],"content":"Hugo provides multiple built-in shortcodes for author convenience and to keep your markdown content clean.","date":"2020-03-04","objectID":"/posts/theme-documentation-built-in-shortcodes/","tags":["shortcodes"],"title":"Theme Documentation - Built-in Shortcodes","uri":"/posts/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"Hugo provides multiple built-in shortcodes for author convenience and to keep your markdown content clean. Hugo uses Markdown for its simple content format. However, there are a lot of things that Markdown doesn’t support well. You could use pure HTML to expand possibilities. But this happens to be a bad idea. Everyone uses Markdown because it’s pure and simple to read even non-rendered. You should avoid HTML to keep it as simple as possible. To avoid this limitations, Hugo created shortcodes. A shortcode is a simple snippet that can generate reasonable HTML code and conforms to Markdown’s design philosophy. Hugo ships with a set of predefined shortcodes that represent very common usage. These shortcodes are provided for author convenience and to keep your markdown content clean. ","date":"2020-03-04","objectID":"/posts/theme-documentation-built-in-shortcodes/:0:0","tags":["shortcodes"],"title":"Theme Documentation - Built-in Shortcodes","uri":"/posts/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"1 figure Documentation of figure Example figure input: {{\u003c figure src=\"/images/lighthouse.jpg\" title=\"Lighthouse (figure)\" \u003e}} The rendered output looks like this: Lighthouse (figure) The HTML looks like this: Lighthouse (figure) ","date":"2020-03-04","objectID":"/posts/theme-documentation-built-in-shortcodes/:1:0","tags":["shortcodes"],"title":"Theme Documentation - Built-in Shortcodes","uri":"/posts/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"2 gist Documentation of gist Example gist input: {{\u003c gist spf13 7896402 \u003e}} The rendered output looks like this: The HTML looks like this: ","date":"2020-03-04","objectID":"/posts/theme-documentation-built-in-shortcodes/:2:0","tags":["shortcodes"],"title":"Theme Documentation - Built-in Shortcodes","uri":"/posts/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"3 highlight Documentation of highlight Example highlight input: {{\u003c highlight html \u003e}} {{ .Title }} {{ range .Pages }} {{ .Render \"summary\"}} {{ end }} {{\u003c /highlight \u003e}} The rendered output looks like this: \u003csection id=\"main\"\u003e \u003cdiv\u003e \u003ch1 id=\"title\"\u003e{{ .Title }}\u003c/h1\u003e {{ range .Pages }} {{ .Render \"summary\"}} {{ end }} \u003c/div\u003e \u003c/section\u003e ","date":"2020-03-04","objectID":"/posts/theme-documentation-built-in-shortcodes/:3:0","tags":["shortcodes"],"title":"Theme Documentation - Built-in Shortcodes","uri":"/posts/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"4 instagram Documentation of instagram Instagram’s API was deprecated since October 24th, 2020 The instagram-shortcode refers an endpoint of Instagram’s API, that’s deprecated since October 24th, 2020. Thus, no images can be fetched from this API endpoint, resulting in an error when the instagram-shortcode is used. For more information please have a look at GitHub issue #7879. ","date":"2020-03-04","objectID":"/posts/theme-documentation-built-in-shortcodes/:4:0","tags":["shortcodes"],"title":"Theme Documentation - Built-in Shortcodes","uri":"/posts/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"5 param Documentation of param Example param input: {{\u003c param description \u003e}} The rendered output looks like this: Hugo provides multiple built-in shortcodes for author convenience and to keep your markdown content clean. ","date":"2020-03-04","objectID":"/posts/theme-documentation-built-in-shortcodes/:5:0","tags":["shortcodes"],"title":"Theme Documentation - Built-in Shortcodes","uri":"/posts/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"6 ref and relref Documentation of ref and relref ","date":"2020-03-04","objectID":"/posts/theme-documentation-built-in-shortcodes/:6:0","tags":["shortcodes"],"title":"Theme Documentation - Built-in Shortcodes","uri":"/posts/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"7 tweet Documentation of tweet Example tweet input: {{\u003c tweet user=GoHugoIO id=917359331535966209 \u003e}} The rendered output looks like this: Reminder: This Twitter account is not actively maintained for questions. Please post all questions on https://t.co/yAzbBojxaU #gohugo — GoHugo.io (@GoHugoIO) October 9, 2017 ","date":"2020-03-04","objectID":"/posts/theme-documentation-built-in-shortcodes/:7:0","tags":["shortcodes"],"title":"Theme Documentation - Built-in Shortcodes","uri":"/posts/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"8 vimeo Documentation of vimeo Example vimeo input: {{\u003c vimeo 146022717 \u003e}} The rendered output looks like this: ","date":"2020-03-04","objectID":"/posts/theme-documentation-built-in-shortcodes/:8:0","tags":["shortcodes"],"title":"Theme Documentation - Built-in Shortcodes","uri":"/posts/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"9 youtube Documentation of youtube Example youtube input: {{\u003c youtube w7Ft2ymGmfc \u003e}} The rendered output looks like this: ","date":"2020-03-04","objectID":"/posts/theme-documentation-built-in-shortcodes/:9:0","tags":["shortcodes"],"title":"Theme Documentation - Built-in Shortcodes","uri":"/posts/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"The echarts shortcode supports data visualization in Hugo with ECharts library.","date":"2020-03-03","objectID":"/posts/theme-documentation-echarts-shortcode/","tags":["shortcodes"],"title":"Theme Documentation - echarts Shortcode","uri":"/posts/theme-documentation-echarts-shortcode/"},{"categories":["documentation"],"content":"The echarts shortcode supports data visualization in Hugo with ECharts library. ECharts is a library helping you to generate interactive data visualization. The basic chart types ECharts supports include line series, bar series, scatter series, pie charts, candle-stick series, boxplot series for statistics, map series, heatmap series, lines series for directional information, graph series for relationships, treemap series, sunburst series, parallel series for multi-dimensional data, funnel series, gauge series. And it’s extremely easy to create a combinition of them with ECharts. Just insert your ECharts option in JSON/YAML/TOML format in the echarts shortcode and that’s it. Example echarts input in JSON format: {{\u003c echarts \u003e}} { \"title\": { \"text\": \"Summary Line Chart\", \"top\": \"2%\", \"left\": \"center\" }, \"tooltip\": { \"trigger\": \"axis\" }, \"legend\": { \"data\": [\"Email Marketing\", \"Affiliate Advertising\", \"Video Advertising\", \"Direct View\", \"Search Engine\"], \"top\": \"10%\" }, \"grid\": { \"left\": \"5%\", \"right\": \"5%\", \"bottom\": \"5%\", \"top\": \"20%\", \"containLabel\": true }, \"toolbox\": { \"feature\": { \"saveAsImage\": { \"title\": \"Save as Image\" } } }, \"xAxis\": { \"type\": \"category\", \"boundaryGap\": false, \"data\": [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"] }, \"yAxis\": { \"type\": \"value\" }, \"series\": [ { \"name\": \"Email Marketing\", \"type\": \"line\", \"stack\": \"Total\", \"data\": [120, 132, 101, 134, 90, 230, 210] }, { \"name\": \"Affiliate Advertising\", \"type\": \"line\", \"stack\": \"Total\", \"data\": [220, 182, 191, 234, 290, 330, 310] }, { \"name\": \"Video Advertising\", \"type\": \"line\", \"stack\": \"Total\", \"data\": [150, 232, 201, 154, 190, 330, 410] }, { \"name\": \"Direct View\", \"type\": \"line\", \"stack\": \"Total\", \"data\": [320, 332, 301, 334, 390, 330, 320] }, { \"name\": \"Search Engine\", \"type\": \"line\", \"stack\": \"Total\", \"data\": [820, 932, 901, 934, 1290, 1330, 1320] } ] } {{\u003c /echarts \u003e}} The same in YAML format: {{\u003c echarts \u003e}} title: text: Summary Line Chart top: 2% left: center tooltip: trigger: axis legend: data: - Email Marketing - Affiliate Advertising - Video Advertising - Direct View - Search Engine top: 10% grid: left: 5% right: 5% bottom: 5% top: 20% containLabel: true toolbox: feature: saveAsImage: title: Save as Image xAxis: type: category boundaryGap: false data: - Monday - Tuesday - Wednesday - Thursday - Friday - Saturday - Sunday yAxis: type: value series: - name: Email Marketing type: line stack: Total data: - 120 - 132 - 101 - 134 - 90 - 230 - 210 - name: Affiliate Advertising type: line stack: Total data: - 220 - 182 - 191 - 234 - 290 - 330 - 310 - name: Video Advertising type: line stack: Total data: - 150 - 232 - 201 - 154 - 190 - 330 - 410 - name: Direct View type: line stack: Total data: - 320 - 332 - 301 - 334 - 390 - 330 - 320 - name: Search Engine type: line stack: Total data: - 820 - 932 - 901 - 934 - 1290 - 1330 - 1320 {{\u003c /echarts \u003e}} The same in TOML format: {{\u003c echarts \u003e}} [title] text = \"Summary Line Chart\" top = \"2%\" left = \"center\" [tooltip] trigger = \"axis\" [legend] data = [ \"Email Marketing\", \"Affiliate Advertising\", \"Video Advertising\", \"Direct View\", \"Search Engine\" ] top = \"10%\" [grid] left = \"5%\" right = \"5%\" bottom = \"5%\" top = \"20%\" containLabel = true [toolbox] [toolbox.feature] [toolbox.feature.saveAsImage] title = \"Save as Image\" [xAxis] type = \"category\" boundaryGap = false data = [ \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\" ] [yAxis] type = \"value\" [[series]] name = \"Email Marketing\" type = \"line\" stack = \"Total\" data = [ 120.0, 132.0, 101.0, 134.0, 90.0, 230.0, 210.0 ] [[series]] name = \"Affiliate Advertising\" type = \"line\" stack = \"Total\" data = [ 220.0, 182.0, 191.0, 234.0, 290.0, 330.0, 310.0 ] [[series]] name = \"Video Advertising\" type = \"line\" stack = \"Total\" data = [ 150.0, 232.0, 201.0, 154.0, 190.0, 330.0, 410.0 ] [[series]] name = \"Direct View\" type = \"line\" stack = \"Total\" data = [ 320.0, 332.0, 301.0, 334.0, 390.0, 330.0, 320.0 ] [[series]] name =","date":"2020-03-03","objectID":"/posts/theme-documentation-echarts-shortcode/:0:0","tags":["shortcodes"],"title":"Theme Documentation - echarts Shortcode","uri":"/posts/theme-documentation-echarts-shortcode/"},{"categories":["documentation"],"content":"The bilibili shortcode embeds a responsive video player for bilibili videos.","date":"2020-03-03","objectID":"/posts/theme-documentation-bilibili-shortcode/","tags":["shortcodes"],"title":"Theme Documentation - bilibili Shortcode","uri":"/posts/theme-documentation-bilibili-shortcode/"},{"categories":["documentation"],"content":" The bilibili shortcode embeds a responsive video player for bilibili videos. When the video only has one part, only the BV id of the video is required, e.g.: https://www.bilibili.com/video/BV1Sx411T7QQ Example bilibili input: {{\u003c bilibili BV1Sx411T7QQ \u003e}} Or {{\u003c bilibili id=BV1Sx411T7QQ \u003e}} The rendered output looks like this: When the video has multiple parts, in addition to the BV id of the video, p is also required, whose default value is 1, e.g.: https://www.bilibili.com/video/BV1TJ411C7An?p=3 Example bilibili input with p: {{\u003c bilibili BV1TJ411C7An 3 \u003e}} Or {{\u003c bilibili id=BV1TJ411C7An p=3 \u003e}} The rendered output looks like this: ","date":"2020-03-03","objectID":"/posts/theme-documentation-bilibili-shortcode/:0:0","tags":["shortcodes"],"title":"Theme Documentation - bilibili Shortcode","uri":"/posts/theme-documentation-bilibili-shortcode/"},{"categories":["PersonalProjects","WebDevelopment"],"content":"Building a personal website can be simple, elegant, and fully under your control using Hugo “v0.143.1” and the LoveIt theme “LoveIt v0.3.0”. In this post, I share my step-by-step journey, lessons learned, and key decisions. 1️⃣ Choosing Hugo and LoveIt I wanted: Markdown-first content Lightweight, static hosting on GitHub Pages A modern but clean design After comparing themes, I chose: Hugo Extended Binary → No heavy dependencies LoveIt theme → Responsive, feature-rich, and works well for blogs 2️⃣ Local Setup Prepare Hugo Binary in /opt/software/hugo # Go to tools folder mkdir -p /opt/software/hugo cd /opt/software/hugo # Download Hugo Extended latest release (Linux 64-bit) wget https://github.com/gohugoio/hugo/releases/download/v0.143.1/hugo_extended_0.143.1_Linux-64bit.tar.gz # Extract and clean tar -xvzf hugo_extended_0.143.1_Linux-64bit.tar.gz rm hugo_extended_0.143.1_Linux-64bit.tar.gz # Verify binary ./hugo version Expected output: hugo v0.143.1-extended+linux/amd64 BuildDate=xxxx (Optional) Add Hugo to your PATH: echo 'export PATH=/opt/software/hugo:$PATH' \u003e\u003e ~/.coderc source ~/.coderc Initialize project hugo new site OwnWebsite cd OwnWebsite git init Add LoveIt theme as submodule and ensure exact version is taken git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt git add .gitmodules themes/LoveIt cd ./themes/LoveIt git fetch --all --tags git checkout v0.3.0 git pull .gitignore Setup for Submodule Edit# Ignore all other themes except LoveIt submodule themes/*/ !themes/LoveIt/ Use hugo.toml instead of old config.toml baseURL = \"https://.github.io/\" title = \"My Personal Website\" theme = [\"LoveIt\"] 3️⃣ First Post \u0026 Images To create the first post: hugo new posts/first-post/index.md Images go inside the same folder: content/posts/first-post/ index.md SampleImage.jpg Access in Markdown: --- title: \"My First Blog Post\" subtitle: \"Learning Hugo + LoveIt\" date: 2025-07-31T10:00:00+02:00 draft: false tags: [\"hugo\", \"loveit\", \"learning\"] categories: [\"blog\"] author: \"Your Name\" summary: \"This is my first post on my personal site using Hugo LoveIt theme. Exploring markdown, code blocks, images, and shortcodes.\" --- Welcome to my **first blog post** with the [LoveIt](https://hugoloveit.com) theme! ## 📌 Key Highlights 1. Markdown is **clean and fast** 2. LoveIt theme provides: - TOC support - Code highlighting - Image lightbox 3. Deployment via **GitHub Pages** is simple --- ![Legend Walks](SampleImage.jpg) 4️⃣ GitHub Pages \u0026 Deployment Created public Pages repo: \u003cusername\u003e.github.io Linked public/ as submodule: git submodule add -b gh-pages git@github.com:/.github.io.git public Build \u0026 Deploy hugo --minify cd public git add . git commit -m \"Deploy site\" git push origin gh-pages Enable GitHub Pages → Selected gh-pages branch → ✅ Live! 5️⃣ Adding a Custom Subdomain I mapped OwnWebsite.example.com using DNS CNAME RECORD: CNAME → \u003cusername\u003e.github.io Verified with: dig OwnWebsite.example.com Within 30 minutes, the custom domain with HTTPS was active. 6️⃣ Key Lessons Learned ✅ Use Hugo Extended Binary → Clean, no OS pollution ✅ Always use submodules for public/ and themes/ ✅ Use Page Bundles for images → Avoid 404 issues ✅ Check Hugo theme compatibility with your Hugo version ","date":"2025-07-31","objectID":"/posts/how-i-built-my-personal-website/:0:0","tags":null,"title":"How I Built My Personal Website with Hugo \u0026 LoveIt","uri":"/posts/how-i-built-my-personal-website/"},{"categories":["PersonalProjects","Mathematics"],"content":"View the raw Markdown file ","date":"2025-07-31","objectID":"/posts/mathematical_foundation_and_sss/:0:0","tags":["Algorithm","Mathematics"],"title":"Mathematical foundation and SSS","uri":"/posts/mathematical_foundation_and_sss/"},{"categories":null,"content":" Kathiravan Muthaiah Senior Delivery Architect | Technologist \u0026 AI Enthusiast 👋 Hello! I am a technology architect and lifelong learner passionate about designing scalable, secure, and intelligent systems that blend cloud, data, and AI. I enjoy turning complex ideas into practical solutions, balancing architecture with hands-on coding and experimentation. ⚡ Technical Curiosities Event-driven \u0026 Distributed Systems Cloud-native \u0026 Containerized Workloads Data Intelligence \u0026 AI Integration (LLM, Graph, Vector) Security, Observability \u0026 Reliable System Design I enjoy exploring how emerging technologies can simplify real-world problems. Experimenting with new programming frameworks \u0026 event pipelines Building Perceptional view to reveal insights from data Tracking some metrics \u0026 productivity patterns for self-understanding and if possible improve. 🌱 Beyond Work Outside of tech, I enjoy quiet explorations, reflection, and simplifying complex things I believe in learning by doing. 🔗 Let’s connect GitHub LinkedIn ✉️ kathir@mikcore.com ","date":"2025-07-31","objectID":"/about/:0:0","tags":null,"title":"About Me","uri":"/about/"}]